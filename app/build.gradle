plugins {
    id 'com.android.application'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
}

android {
    namespace 'com.castro.helena.app.appgallery.helena'
    compileSdk 33

    defaultConfig {
        applicationId "com.castro.helena.app.appgallery.helena"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField "String", "API_KEY", "\"${properties.getProperty("API_KEY")}\""
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // Disables PNG crunching for the "release" build type.
            crunchPngs false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(8))
        }
    }

    buildFeatures {
        buildConfig = true
        viewBinding = true
    }

    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.recyclerview:recyclerview:1.3.0"

    // Multidex
    implementation "androidx.multidex:multidex:2.0.1"

    // Androidx Fragment and Navigation Component
    def nav_version = "2.5.3"
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    // ViewModel
    def lifecycle_version = "2.6.1"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // For Java8
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"

    // optional - Test helpers for Lifecycle runtime
    testImplementation "androidx.lifecycle:lifecycle-runtime-testing:$lifecycle_version"

    def arch_version = "2.2.0"
    implementation "androidx.arch.core:core-common:$arch_version"
    implementation "androidx.arch.core:core-runtime:$arch_version"
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    // Dependency Injection - DaggerHilt
    def daggerHilt_version = '2.46'
    implementation "com.google.dagger:hilt-android:$daggerHilt_version"
    kapt "com.google.dagger:hilt-compiler:$daggerHilt_version"

    // Retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    // RxJava & RxAndroid
    implementation 'io.reactivex.rxjava2:rxjava:2.2.15'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // OkHttp3
    def okhttp3_version = "5.0.0-alpha.11"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"

    // Glide
    def glide_version = "4.15.1"
    implementation "com.github.bumptech.glide:glide:$glide_version"

    // Typed DataStore (Typed API surface, such as ProtoDataStore)
    def data_store_version = "1.0.0"
    implementation "androidx.datastore:datastore:$data_store_version"
    // Alternatively - use the following artifact without an Android dependency.
    implementation "androidx.datastore:datastore-core:$data_store_version"

    // Tests
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}